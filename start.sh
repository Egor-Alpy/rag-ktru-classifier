#!/bin/bash

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
CURRENT_DIR=$(pwd)
PROJECT_DIR="/workspace/rag-ktru-classifier"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞, –µ—Å–ª–∏ –Ω–µ –≤ –Ω–µ–π
if [ "$CURRENT_DIR" != "$PROJECT_DIR" ]; then
    echo "üîÑ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_DIR"
    cd "$PROJECT_DIR" || {
        echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ $PROJECT_DIR"
        exit 1
    }
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
mkdir -p logs qdrant_storage models data

echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ö–¢–†–£ –∏–∑ $PROJECT_DIR..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Qdrant –≤ –ø—Ä–æ–µ–∫—Ç–µ
if [ ! -f "./qdrant" ]; then
    echo "üì• Qdrant –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–≥—Ä—É–∂–∞–µ–º..."
    curl -L https://github.com/qdrant/qdrant/releases/download/v1.7.4/qdrant-x86_64-unknown-linux-gnu.tar.gz -o qdrant.tar.gz
    tar -xzf qdrant.tar.gz
    rm qdrant.tar.gz
    chmod +x qdrant
fi

# –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞–ª–∏—á–∏—è curl
if ! command -v curl &> /dev/null; then
    echo "üì¶ curl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    apt-get update && apt-get install -y curl
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
if ! python -c "import fastapi" 2>/dev/null; then
    echo "üì¶ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    pip install -r requirements.txt
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è Qdrant
check_qdrant_status() {
    local max_attempts=30
    local attempt=1

    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Qdrant..."

    while [ $attempt -le $max_attempts ]; do
        if curl -s http://localhost:6333/collections > /dev/null 2>&1; then
            echo "‚úÖ Qdrant —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"

            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö
            echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –ë–î..."
            python3 -c "
import requests
import json

try:
    response = requests.get('http://localhost:6333/collections')
    if response.status_code == 200:
        data = response.json()
        collections = data.get('result', {}).get('collections', [])

        if collections:
            print(f'üìö –ù–∞–π–¥–µ–Ω–æ –∫–æ–ª–ª–µ–∫—Ü–∏–π: {len(collections)}')

            for collection in collections:
                name = collection.get('name', 'unknown')
                try:
                    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ–ª–ª–µ–∫—Ü–∏–∏
                    count_response = requests.get(f'http://localhost:6333/collections/{name}/points/count')
                    if count_response.status_code == 200:
                        count_data = count_response.json()
                        count = count_data.get('result', {}).get('count', 0)
                        print(f'   - {name}: {count:,} –∑–∞–ø–∏—Å–µ–π')
                    else:
                        print(f'   - {name}: —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
                except:
                    print(f'   - {name}: –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏')
        else:
            print('üì≠ –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
    else:
        print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π')
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–ª–ª–µ–∫—Ü–∏–π: {e}')
" 2>/dev/null || echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö"
            return 0
        fi

        echo "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts..."
        sleep 2
        ((attempt++))
    done

    echo "‚ùå –û—à–∏–±–∫–∞: Qdrant –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥."
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API
check_api_status() {
    local max_attempts=10
    local attempt=1

    echo "‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ API..."

    while [ $attempt -le $max_attempts ]; do
        if curl -s http://localhost:8000/health > /dev/null 2>&1; then
            echo "‚úÖ API —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"

            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
            echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã..."
            python3 -c "
import requests
import json

try:
    response = requests.get('http://localhost:8000/status', timeout=10)
    if response.status_code == 200:
        data = response.json()

        print(f'üîß –°—Ç–∞—Ç—É—Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:')
        print(f'   - API: {data.get(\"api\", \"unknown\")}')
        print(f'   - Qdrant: {data.get(\"qdrant\", \"unknown\")}')
        print(f'   - –ú–æ–¥–µ–ª–∏: {data.get(\"models\", \"unknown\")}')
        print(f'   - –ö–¢–†–£ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {data.get(\"ktru_loaded\", False)}')

        collections = data.get('collections', {})
        if collections:
            print(f'üìö –ö–æ–ª–ª–µ–∫—Ü–∏–∏:')
            for name, info in collections.items():
                count = info.get('vectors_count', 0)
                size = info.get('vector_size', 0)
                print(f'   - {name}: {count:,} –≤–µ–∫—Ç–æ—Ä–æ–≤ (—Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å {size})')
        else:
            print('üì≠ –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å—Ç–∞—Ç—É—Å–µ')
    else:
        print(f'‚ö†Ô∏è  –°—Ç–∞—Ç—É—Å API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}')
except Exception as e:
    print(f'‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}')
" 2>/dev/null || echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞—Ç—É—Å–µ"

            return 0
        fi

        echo "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts..."
        sleep 3
        ((attempt++))
    done

    echo "‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    return 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Qdrant
QDRANT_RUNNING=$(curl -s http://localhost:6333/collections > /dev/null && echo "yes" || echo "no")

if [ "$QDRANT_RUNNING" = "no" ]; then
    echo "üîÑ –ó–∞–ø—É—Å–∫ Qdrant..."

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ config.yaml, –µ—Å–ª–∏ –Ω–µ—Ç - —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π
    if [ ! -f "./config.yaml" ]; then
        echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Qdrant..."
        cat > ./config.yaml << EOL
storage:
  storage_path: $PROJECT_DIR/qdrant_storage
service:
  host: 0.0.0.0
  http_port: 6333
  grpc_port: 6334
log_level: INFO
EOL
    fi

    nohup ./qdrant --config-path ./config.yaml > ./logs/qdrant.log 2>&1 &
    QDRANT_PID=$!

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ Qdrant —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    if ! check_qdrant_status; then
        echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: Qdrant –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
        echo "üìã –õ–æ–≥–∏ Qdrant:"
        tail -20 ./logs/qdrant.log
        exit 1
    fi
else
    echo "‚úÖ Qdrant —É–∂–µ –∑–∞–ø—É—â–µ–Ω."
    check_qdrant_status
fi

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [ ! -f "./.env" ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
    cat > ./.env << EOL
QDRANT_HOST=localhost
QDRANT_PORT=6333
QDRANT_COLLECTION=ktru_codes
MONGO_EXTERNAL_URI=${MONGO_EXTERNAL_URI:-mongodb://external_mongodb_server:27017/}
MONGO_LOCAL_URI=mongodb://localhost:27017/
MONGO_DB_NAME=${MONGO_DB_NAME:-ktru_database}
MONGO_COLLECTION=${MONGO_COLLECTION:-ktru_collection}
API_HOST=0.0.0.0
API_PORT=8000
EMBEDDING_MODEL=cointegrated/rubert-tiny2
LLM_BASE_MODEL=Open-Orca/Mistral-7B-OpenOrca
LLM_ADAPTER_MODEL=IlyaGusev/saiga_mistral_7b_lora
VECTOR_SIZE=312
BATCH_SIZE=32
TEMPERATURE=0.1
TOP_P=0.95
REPETITION_PENALTY=1.15
MAX_NEW_TOKENS=100
TOP_K=5
EOL
fi

# –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å MongoDB –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
echo "üîÑ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å MongoDB..."
nohup python ./mongodb_sync.py > ./logs/mongodb_sync.log 2>&1 &
SYNC_PID=$!
echo "‚úÖ –ü—Ä–æ—Ü–µ—Å—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—É—â–µ–Ω —Å PID: $SYNC_PID"

# –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–∏—Å–∞
echo "üîÑ –ó–∞–ø—É—Å–∫ API-—Å–µ—Ä–≤–∏—Å–∞..."
nohup python ./api.py > ./logs/api.log 2>&1 &
API_PID=$!
echo "‚úÖ API-—Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω —Å PID: $API_PID"

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ API –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
sleep 5

if ! check_api_status; then
    echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: API –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    echo "üìã –õ–æ–≥–∏ API:"
    tail -20 ./logs/api.log
    exit 1
fi

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap 'echo "üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã..."; kill $SYNC_PID $API_PID 2>/dev/null; exit' SIGINT SIGTERM

echo ""
echo "üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã!"
echo "=================================================="
echo "üìç Endpoints:"
echo "   üè• Health check: http://localhost:8000/health"
echo "   üìä System status: http://localhost:8000/status"
echo "   üìö Collections:   http://localhost:8000/collections"
echo "   ü§ñ Classify:      http://localhost:8000/classify"
echo "   üîç Qdrant:        http://localhost:6333"
echo ""
echo "üìÅ –õ–æ–≥–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $PROJECT_DIR/logs/"
echo "üîß –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã: cd $PROJECT_DIR && python system_status.py"
echo ""
echo "–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"

# –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∞–∫—Ç–∏–≤–Ω—ã–º
while true; do
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å—ã –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞—é—Ç
    if ! ps -p $SYNC_PID > /dev/null 2>&1; then
        echo "$(date): ‚ö†Ô∏è  –ü—Ä–æ—Ü–µ—Å—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫..."
        nohup python ./mongodb_sync.py > ./logs/mongodb_sync.log 2>&1 &
        SYNC_PID=$!
    fi

    if ! ps -p $API_PID > /dev/null 2>&1; then
        echo "$(date): ‚ö†Ô∏è  API-—Å–µ—Ä–≤–∏—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫..."
        nohup python ./api.py > ./logs/api.log 2>&1 &
        API_PID=$!

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ API —Å–Ω–æ–≤–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–ª
        sleep 5
        check_api_status
    fi

    sleep 60
done