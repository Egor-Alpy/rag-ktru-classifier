# docker-compose.yml
version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  embeddings:
    build:
      context: ./embeddings
    container_name: embeddings
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      - EMBEDDING_MODEL_ID=${EMBEDDING_MODEL_ID}
      - EMBEDDING_DEVICE=${EMBEDDING_DEVICE}
      - API_PORT=8080
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  llm:
    build:
      context: ./llm
    container_name: llm
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      - MODEL_ID=${MODEL_ID}
      - MODEL_REVISION=${MODEL_REVISION}
      - MODEL_QUANTIZATION=${MODEL_QUANTIZATION}
      - API_PORT=8081
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: ./api
    container_name: api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGO_URI=${MONGO_URI}
      - MONGO_DB=${MONGO_DB}
      - MONGO_COLLECTION=${MONGO_COLLECTION}
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_COLLECTION=${QDRANT_COLLECTION}
      - EMBEDDING_SERVICE_URL=http://embeddings:8080
      - LLM_SERVICE_URL=http://llm:8081
      - API_HOST=${API_HOST}
      - API_PORT=${API_PORT}
    depends_on:
      - qdrant
      - embeddings
      - llm
    networks:
      - rag-network

networks:
  rag-network:
    driver: bridge

volumes:
  qdrant_data: